import SwiftUI

struct SettingsView: View {
    @EnvironmentObject private var vm: WaterTrackerViewModel

    @State private var tempGoal: String = ""
    @State private var tempStep: String = ""
    @State private var resetHour: Int = 0
    @State private var unit: AppSettings.Unit = .ml

    var body: some View {
        Form {
            Section(header: Text("목표")) {
                TextField("하루 목표 (ml)", text: $tempGoal)
                    .keyboardType(.numberPad)
                Button("목표 저장") {
                    if let g = Int(tempGoal), g >= 0 {
                        vm.overwriteGoal(g)
                        tempGoal = String(vm.settings.goalML)
                    }
                }
            }

            Section(header: Text("증가량 버튼")) {
                TextField("버튼 증가량 (ml)", text: $tempStep)
                    .keyboardType(.numberPad)
                Button("증가량 저장") {
                    if let s = Int(tempStep), s >= 0 {
                        vm.changeStep(s)
                        tempStep = String(vm.settings.stepML)
                    }
                }
                Text("대시보드에 ±½, 1x, 2x 버튼이 표시됩니다.")
                    .font(.footnote)
                    .foregroundStyle(.secondary)
            }

            Section(header: Text("일일 리셋 시각")) {
                Stepper(value: $resetHour, in: 0...23) {
                    Text("매일 \(resetHour)시에 초기화")
                }
                Button("리셋 시각 저장") {
                    vm.changeResetHour(resetHour)
                }
            }

            Section(header: Text("표시 단위")) {
                Picker("단위", selection: $unit) {
                    ForEach(AppSettings.Unit.allCases, id: \.self) { u in
                        Text(u == .ml ? "ml" : "oz").tag(u)
                    }
                }
                .pickerStyle(.segmented)
                .onChange(of: unit) { _ in
                    var s = vm.settings
                    s.unit = unit
                    vm.settings = s
                }
            }
        }
        .onAppear {
            tempGoal = String(vm.settings.goalML)
            tempStep = String(vm.settings.stepML)
            resetHour = vm.settings.resetHour
            unit = vm.settings.unit
        }
        .navigationTitle("설정")
    }
}
