import SwiftUI   // SwiftUI 프레임워크 불러오기 (UI 구성용)

// MARK: - CircularProgressView
// 원형 형태로 목표 달성 진행률을 시각적으로 보여주는 커스텀 뷰
struct CircularProgressView: View {
    // progress: 현재 진행률 (0.0 ~ 1.0 범위)
    // 0.0 = 0%  /  1.0 = 100%
    var progress: Double

    // SwiftUI에서 화면의 UI 계층 구조를 정의하는 부분
    var body: some View {
        // ZStack: 겹쳐서 배치 (Progress 배경 원 + 채워지는 원 + 퍼센트 텍스트)
        ZStack {
            // 1️⃣ 배경 원 (회색 반투명한 고리)
            Circle()
                .stroke(lineWidth: 16)      // 테두리 두께 설정
                .opacity(0.15)              // 투명도 낮춰서 흐리게 표시 (배경 느낌)

            // 2️⃣ 진행률 원 (목표 달성 비율만큼 채워지는 부분)
            Circle()
                .trim(from: 0, to: progress) // 0~progress 비율만큼 원의 일부만 그림
                .stroke(
                    style: StrokeStyle(
                        lineWidth: 16,        // 선 두께 동일하게
                        lineCap: .round       // 끝부분 둥글게 처리
                    )
                )
                .rotationEffect(.degrees(-90))   // 시작 지점을 12시 방향으로 회전
                .animation(.easeInOut(duration: 0.35), value: progress)
                // progress 값이 변경될 때 부드러운 애니메이션 효과 적용

            // 3️⃣ 중앙 텍스트 (현재 진행률 %로 표시)
            Text("\(Int(progress * 100))%")
                .font(.title3).bold()       // 중간 크기 굵은 폰트로 표시
        }
    }
}
